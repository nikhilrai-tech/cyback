# Generated by Django 3.2.5 on 2022-10-17 11:23

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True, verbose_name='Program Title')),
                ('type', models.CharField(choices=[('BBP', 'Bug Bounty Program'), ('VDP', 'Vulnerability Disclosure Program'), ('PRI', 'Private Program')], max_length=100, verbose_name='Program Type')),
                ('policy', models.CharField(blank=True, max_length=500, null=True, verbose_name='Program Policy')),
                ('resolved', models.IntegerField(default=0, verbose_name='Reports Resolved')),
                ('lowreward', models.IntegerField(default=0, verbose_name='Low Reward in ₹')),
                ('midreward', models.IntegerField(default=0, verbose_name='Medium Reward in ₹')),
                ('highreward', models.IntegerField(default=0, verbose_name='High Reward in ₹')),
                ('criticreward', models.IntegerField(default=0, verbose_name='Critical Reward in ₹')),
                ('active', models.BooleanField(default=False, verbose_name='Active')),
                ('managed', models.BooleanField(default=False, verbose_name='Managed By Cyber3ra')),
                ('updated', models.BooleanField(default=False, verbose_name='Updated')),
                ('splitting', models.BooleanField(default=False, verbose_name='Bounty Splitting Eligible')),
                ('efficiency', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(1)])),
                ('published', models.DateTimeField(auto_now_add=True, verbose_name='Date Posted')),
                ('lastedited', models.DateTimeField(auto_now=True, verbose_name='Last Edited')),
                ('background', models.ImageField(blank=True, null=True, upload_to='programs', verbose_name='Background Image')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('posted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='program_posted_by', to=settings.AUTH_USER_MODEL, verbose_name='Posted By Company')),
            ],
        ),
        migrations.CreateModel(
            name='Thanks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=250, null=True, verbose_name='Description')),
                ('reputation', models.IntegerField(default=1, verbose_name='Reputation Earned')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Date Earned')),
                ('fro', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='from_company', to=settings.AUTH_USER_MODEL, verbose_name='From Company')),
                ('to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='to_user', to=settings.AUTH_USER_MODEL, verbose_name='To User')),
            ],
        ),
        migrations.CreateModel(
            name='Scope',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('1', 'CIDR'), ('2', 'Domain'), ('3', 'iOS: App Store'), ('4', 'iOS: Testflight'), ('5', 'iOS: .ipa'), ('6', 'Android: Play Store'), ('7', 'Android: .apk'), ('8', 'Windows: Microsoft Store'), ('9', 'Source Code'), ('10', 'Executable'), ('11', 'Hardware/IoT'), ('12', 'Other')], max_length=100, verbose_name='Scope Type')),
                ('domain', models.CharField(max_length=100, verbose_name='Domain/Environment')),
                ('markdown', models.TextField(blank=True, max_length=400, null=True, verbose_name='Description')),
                ('tags', models.CharField(default='', max_length=400, verbose_name='Tags')),
                ('severity', models.CharField(choices=[('C', 'Critical'), ('H', 'High'), ('M', 'Medium'), ('L', 'Low'), ('N', 'None')], default='M', max_length=100, verbose_name='Severity')),
                ('bounty', models.BooleanField(default=False, verbose_name='Bounty Eligible')),
                ('out', models.BooleanField(default=False, verbose_name='Out of Scope')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.IntegerField(default=17907079, editable=False, primary_key=True, serialize=False, unique=True)),
                ('title', models.CharField(max_length=100, verbose_name='Title')),
                ('status', models.CharField(choices=[('P', 'In Progress'), ('C', 'Completed'), ('R', 'Rejected'), ('B', 'Rewarded'), ('N', 'Not Applicable'), ('A', 'Accepted'), ('D', 'Duplicate')], default='P', max_length=100, verbose_name='Status')),
                ('description', models.CharField(blank=True, max_length=500, null=True, verbose_name='Description')),
                ('impact', models.CharField(blank=True, max_length=500, null=True, verbose_name='Impact')),
                ('weakness', models.CharField(max_length=100, verbose_name='Weakness')),
                ('severity', models.CharField(choices=[('C', 'Critical'), ('H', 'High'), ('M', 'Medium'), ('L', 'Low'), ('N', 'None')], default='M', max_length=100, verbose_name='Severity')),
                ('disclosure', models.BooleanField(default=False, verbose_name='Public Disclosure')),
                ('published', models.DateTimeField(auto_now_add=True, verbose_name='Date Posted')),
                ('lastedited', models.DateTimeField(auto_now=True, verbose_name='Last Edited')),
                ('disclosed', models.DateTimeField(blank=True, null=True, verbose_name='Date Disclosed')),
                ('photo0', models.ImageField(blank=True, null=True, upload_to='reports', verbose_name='Report Attached File 1')),
                ('photo1', models.ImageField(blank=True, null=True, upload_to='reports', verbose_name='Report Attached File 2')),
                ('photo2', models.ImageField(blank=True, null=True, upload_to='reports', verbose_name='Report Attached File 3')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('asset', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='scope_selected', to='main.scope', verbose_name='Asset')),
                ('posted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='report_posted_by', to=settings.AUTH_USER_MODEL, verbose_name='Posted By')),
                ('program', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='program_selected', to='main.program', verbose_name='Program')),
                ('upvotes', models.ManyToManyField(blank=True, related_name='upvotes_by_user', to=settings.AUTH_USER_MODEL, verbose_name='Upvotes')),
            ],
        ),
        migrations.AddField(
            model_name='program',
            name='scopes',
            field=models.ManyToManyField(blank=True, related_name='scopes_related', to='main.Scope', verbose_name='Scopes'),
        ),
        migrations.AddField(
            model_name='program',
            name='subscribed',
            field=models.ManyToManyField(blank=True, related_name='Users_subscribing_this_program', to=settings.AUTH_USER_MODEL, verbose_name='Users Invited to this Program'),
        ),
        migrations.AddField(
            model_name='program',
            name='thanks',
            field=models.ManyToManyField(blank=True, related_name='Users_thanked_for_this_program', to='main.Thanks', verbose_name='Thanked Users'),
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=100, verbose_name='Job Title/Deignation')),
                ('description', models.CharField(blank=True, max_length=500, null=True, verbose_name='Job Description')),
                ('type', models.CharField(choices=[('C', 'Contract'), ('F', 'Full Time')], default='F', max_length=100, verbose_name='Job Type')),
                ('link', models.CharField(max_length=100, verbose_name='Job Link')),
                ('location', models.CharField(max_length=100, verbose_name='Job Location')),
                ('remote', models.BooleanField(default=False, verbose_name='Remote Friendly')),
                ('out', models.BooleanField(default=False, verbose_name='Out of Scope')),
                ('published', models.DateTimeField(auto_now_add=True, verbose_name='Date Posted')),
                ('lastedited', models.DateTimeField(auto_now=True, verbose_name='Last Edited')),
                ('posted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='job_posted_by', to=settings.AUTH_USER_MODEL, verbose_name='Posted By')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.CharField(blank=True, max_length=500, null=True, verbose_name='Comment Body')),
                ('request', models.BooleanField(default=False, verbose_name='Description Type')),
                ('type', models.CharField(choices=[('A', 'Status Change'), ('D', 'Request Disclosure'), ('D2', 'Request Hide'), ('T', 'Thanks'), ('B', 'Body'), ('Ri', 'Reward Initiated'), ('Rs', 'Reward Success'), ('Rc', 'Reward Cancelled')], default='B', max_length=100, verbose_name='Type')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Date Earned')),
                ('posted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment_posted_by', to=settings.AUTH_USER_MODEL, verbose_name='Posted By')),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment_of_report', to='main.report', verbose_name='Report')),
            ],
        ),
    ]
